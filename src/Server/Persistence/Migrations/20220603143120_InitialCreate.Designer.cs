// <auto-generated />
using System;
using Chambio.Server.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chambio.Server.Persistence.Migrations
{
    [DbContext(typeof(ChambioContext))]
    [Migration("20220603143120_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chambio.Server.Entities.Chamber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int?>("HouseType")
                        .HasColumnType("integer");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Chambers");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FlagUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LegislatureType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SymbolUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Ideology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ideologies");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChamberId")
                        .HasColumnType("integer");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PartyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChamberId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PartyId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("IdeologyParty", b =>
                {
                    b.Property<int>("IdeologiesId")
                        .HasColumnType("integer");

                    b.Property<int>("PartiesId")
                        .HasColumnType("integer");

                    b.HasKey("IdeologiesId", "PartiesId");

                    b.HasIndex("PartiesId");

                    b.ToTable("IdeologyParty");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Chamber", b =>
                {
                    b.HasOne("Chambio.Server.Entities.Country", "Country")
                        .WithMany("Chambers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Member", b =>
                {
                    b.HasOne("Chambio.Server.Entities.Chamber", "Chamber")
                        .WithMany("Members")
                        .HasForeignKey("ChamberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chambio.Server.Entities.Country", "Country")
                        .WithMany("Members")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chambio.Server.Entities.Party", "Party")
                        .WithMany("Members")
                        .HasForeignKey("PartyId");

                    b.Navigation("Chamber");

                    b.Navigation("Country");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Party", b =>
                {
                    b.HasOne("Chambio.Server.Entities.Country", "Country")
                        .WithMany("Parties")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("IdeologyParty", b =>
                {
                    b.HasOne("Chambio.Server.Entities.Ideology", null)
                        .WithMany()
                        .HasForeignKey("IdeologiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chambio.Server.Entities.Party", null)
                        .WithMany()
                        .HasForeignKey("PartiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Chambio.Server.Entities.Chamber", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Country", b =>
                {
                    b.Navigation("Chambers");

                    b.Navigation("Members");

                    b.Navigation("Parties");
                });

            modelBuilder.Entity("Chambio.Server.Entities.Party", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
